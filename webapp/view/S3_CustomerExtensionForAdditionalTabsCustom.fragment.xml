<core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m" xmlns:form="sap.ui.layout.form" xmlns:layout="sap.ui.layout"
	xmlns:sap.ca.ui="sap.ca.ui" xmlns:suite="sap.suite.ui.commons">
	<!-- This extension point can be used to add fields to items -->
	<!--<IconTabFilter xmlns="sap.m" id="MIBObjectLinksTabFilter_clone" icon="sap-icon://chain-link" tooltip="{i18n>relatedObjects.tooltip}" count="{detail>/ObjectLinksCount}" visible="{ path: 'detail>/TaskSupports/TaskObject', formatter: 'cross.fnd.fiori.inbox.Conversions.formatterVisibilityOfObjectIconTab' }" key="OBJECTLINKS">
						<core:ExtensionPoint xmlns:core="sap.ui.core" name="CustomerExtensionForObjectLinkTabContent">
							<core:Fragment fragmentName="cross.fnd.fiori.inbox.frag.ObjectLinks" type="XML"/>
						</core:ExtensionPoint>
					</IconTabFilter>-->
	<IconTabFilter xmlns="sap.m" id="ZGeneralComms" icon="sap-icon://discussion" tooltip="General Communications" key="ZGeneralComms">
		<TextArea id="generalComms" width="100%" growing="false" rows="25" wrapping="Hard"
				  value="{salesOrder>/header/generalComms}"/>
	</IconTabFilter>
					
	<IconTabFilter xmlns="sap.m" id="ZSalesItems" icon="sap-icon://activities" tooltip="Sales Order Items" count="{salesOrder>/itemsCount}" key="ZSalesOrderItems">
		<Table id="salesItems" items="{salesOrder>/items}" width="auto" class="sapUiResponsiveMargin" noDataText="No Valid Line Items" busy="{salesOrder>/busy}">
			<headerToolbar>
				<Toolbar>
					<Title text="Items: {salesOrder>/itemsCount}"/>
					<ToolbarSpacer/>
					<Label text="Total Cost: " visible="{salesOrder>/expenditureMode}"/>
					<ObjectNumber visible="{salesOrder>/expenditureMode}"
						number="{ path: 'salesOrder>/header/totalCost', formatter: '.formatCurrency' }" unit="AUD"/>
				</Toolbar>
			</headerToolbar>
			<columns>
				<Column><Text text="#"/></Column>
				<Column><Text text="Part Number"/></Column>
				<Column><Text text="Part Description"/></Column>
				<Column><Text text="Quantity"/></Column>
				<Column visible="{salesOrder>/expenditureMode}"><Text text="Standard Cost"/></Column>
				<Column visible="{salesOrder>/expenditureMode}"><Text text="Extended Cost"/></Column>
				<Column visible="{salesOrder>/csAdminMode}" hAlign="Center"><Text text="{= ${salesOrder>/hasReviewQuantities} ? 'Requested Qty' : 'Add to DC Req' }"/></Column>
				<Column visible="{salesOrder>/reviewMode}" hAlign="Center"><Text text="Change Quantity"/></Column>
				<Column visible="{salesOrder>/hasReviewQuantities}" hAlign="Center"><Text text="Modify Quantity"/></Column>
				<Column width="10rem" visible="{salesOrder>/csAdminMode}" hAlign="Center"><Text text="Date Required"/></Column>
			</columns>
			<items>
				<ColumnListItem>
					<cells>
						<ObjectIdentifier title="{salesOrder>itemId}"/>
						<ObjectIdentifier title="{salesOrder>material}"/>
						<Text text="{salesOrder>shortText}"/>
						<ObjectNumber number="{= ${salesOrder>/expenditureMode} ? ${salesOrder>externalProcureQty/value} : ${salesOrder>reqQty} }" unit="{salesOrder>salesUnit}"/>
						<ObjectNumber number="{ path: 'salesOrder>standardCost', formatter: '.formatCurrency' }" unit="{salesOrder>standardCostCurrency}"/>
						<ObjectNumber number="{ path: 'salesOrder>extendedCost', formatter: '.formatCurrency' }" unit="{salesOrder>standardCostCurrency}"/>
						<HBox>
							<CheckBox selected="{salesOrder>externalProcureFlag}" select="onExternalProcureFlagSelected" visible="{= !${salesOrder>/hasReviewQuantities} }"
							enabled="{= ${salesOrder>ItemCategory} !== 'TATX'}"/>
							<Input type="Number" value="{salesOrder>externalProcureQty/value}" visible="{salesOrder>externalProcureFlag}"
								   valueState="{salesOrder>externalProcureQty/valueState}" editable="{= !${salesOrder>/hasReviewQuantities} }"
								   valueStateText="Enter a valid quantity"/> 
						</HBox>
						<Input type="Number" value="{salesOrder>reviewQty/value}" valueState="{salesOrder>reviewQty/valueState}"
											 valueStateText="Enter a valid quantity"/>
						<Input type="Number" value="{salesOrder>reviewQty/value}" valueState="{salesOrder>reviewQty/valueState}"
											 valueStateText="Enter a valid quantity"/>
						<HBox visible="{salesOrder>externalProcureFlag}">
							<DatePicker value="{salesOrder>dateRequired/value}"  editable="{= !${salesOrder>/hasReviewQuantities} }"
									valueState="{salesOrder>dateRequired/valueState}" valueStateText="{salesOrder>dateRequired/valueStateText}"
									minDate="{ path: '', formatter: '.getTodaysDate' }" valueFormat="yyyyMMdd" />
							<Button icon="sap-icon://activate" tooltip="Apply Date to All Ticked Items" press="setRequiredDateForAll"/>
						</HBox>
					</cells>
				</ColumnListItem>
			</items>
		</Table>
	</IconTabFilter>
</core:FragmentDefinition>